{
   "jobs" : {
      "build" : {
         "environment" : {
            "CIRCLE_ARTIFACTS" : "/tmp/circle-artifacts"
         },
         "machine" : {
            "enabled" : true
         },
         "steps" : [
            "checkout",
            {
               "run" : {
                  "command" : "mkdir -p $CIRCLE_ARTIFACTS"
               }
            },
            {
               "run" : {
                  "command" : "make test-deps"
               }
            },
            {
               "run" : {
                  "command" : "make test"
               }
            },
            {
               "run" : {
                  "background" : true,
                  "command" : "./plackup -p 5114 -t Twiggy::Prefork bin/server.psgi"
               }
            },
            {
               "run" : {
                  "command" : "sleep 10"
               }
            },
            {
               "run" : {
                  "command" : "curl http://localhost:5114"
               }
            },
            {
               "store_artifacts" : {
                  "path" : "/tmp/circle-artifacts"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Agit config --global user.email \u0022temp@circleci.test\u0022\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Agit config --global user.name \u0022CircleCI\u0022\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000A[[ ! -s \u0022$(git rev-parse --git-dir)/shallow\u0022 ]] || git fetch --unshallow\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Amake create-commit-for-heroku\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Agit push git@heroku.com:misc-tools.git \u002B`git rev-parse HEAD`:refs/heads/master\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Acat config/python/requirements.*.txt > requirements.txt\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Acp Procfile.py Procfile\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Agit add requirements.txt Procfile\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Agit add -f local/perl-5.*/pm\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Agit commit -m heroku\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022master\u0022 ]; then\u000Atrue\u000Agit push git@heroku.com:misc-py.git \u002B`git rev-parse HEAD`:refs/heads/master\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022nightly\u0022 ]; then\u000Atrue\u000Agit rev-parse HEAD > head.txt\u000Acurl -f -s -S --request POST --header \u0022Authorization:token $GITHUB_ACCESS_TOKEN\u0022 --header \u0022Content-Type:application/json\u0022 --data-binary \u0022{\u005C\u0022base\u005C\u0022:\u005C\u0022master\u005C\u0022,\u005C\u0022head\u005C\u0022:\u005C\u0022`cat head.txt`\u005C\u0022,\u005C\u0022commit_message\u005C\u0022:\u005C\u0022auto-merge $CIRCLE_BRANCH into master\u005C\u0022}\u0022 \u0022https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/merges\u0022\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == \u0022staging\u0022 ]; then\u000Atrue\u000Agit rev-parse HEAD > head.txt\u000Acurl -f -s -S --request POST --header \u0022Authorization:token $GITHUB_ACCESS_TOKEN\u0022 --header \u0022Content-Type:application/json\u0022 --data-binary \u0022{\u005C\u0022base\u005C\u0022:\u005C\u0022master\u005C\u0022,\u005C\u0022head\u005C\u0022:\u005C\u0022`cat head.txt`\u005C\u0022,\u005C\u0022commit_message\u005C\u0022:\u005C\u0022auto-merge $CIRCLE_BRANCH into master\u005C\u0022}\u0022 \u0022https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/merges\u0022\u000Afi"
               }
            }
         ]
      }
   },
   "version" : 2,
   "workflows" : {
      "build" : {
         "jobs" : [
            "build"
         ]
      },
      "version" : 2
   }
}
