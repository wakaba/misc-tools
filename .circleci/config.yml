{
   "jobs" : {
      "build" : {
         "environment" : {
            "CIRCLE_ARTIFACTS" : "/tmp/circle-artifacts/build"
         },
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "run" : {
                  "command" : "mkdir -p $CIRCLE_ARTIFACTS"
               }
            },
            {
               "run" : {
                  "command" : "docker info"
               }
            },
            {
               "run" : {
                  "background" : true,
                  "command" : "docker pull python:2.7.10"
               }
            },
            {
               "run" : {
                  "command" : "make test-deps"
               }
            },
            {
               "run" : {
                  "command" : "make test"
               }
            },
            {
               "run" : {
                  "background" : true,
                  "command" : "./plackup -p 5114 -t Twiggy::Prefork bin/server.psgi"
               }
            },
            {
               "run" : {
                  "command" : "sleep 10"
               }
            },
            {
               "run" : {
                  "command" : "curl http://localhost:5114"
               }
            },
            {
               "store_artifacts" : {
                  "path" : "/tmp/circle-artifacts/build"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Agit config --global user.email \u0022temp@circleci.test\u0022\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Agit config --global user.name \u0022CircleCI\u0022\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000A[[ ! -s \u0022$(git rev-parse --git-dir)/shallow\u0022 ]] || git fetch --unshallow\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Amake create-commit-for-heroku\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Agit push git@heroku.com:misc-tools.git \u002B`git rev-parse HEAD`:refs/heads/master\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Amake create-commit-for-heroku-py\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Agit push git@heroku.com:misc-py.git \u002B`git rev-parse HEAD`:refs/heads/master\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Adocker build -t wakaba/misc-py:$CIRCLE_SHA1 -f Dockerfile.py .\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000Adocker login -u $DOCKER_USER -p $DOCKER_PASS\u000Afi"
               }
            },
            {
               "deploy" : {
                  "command" : "if [ \u0022${CIRCLE_BRANCH}\u0022 == 'master' ]; then\u000Atrue\u000A# docker push wakaba/misc-py:$CIRCLE_SHA1\u000Afi"
               }
            }
         ]
      },
      "deploy_nightly" : {
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "deploy" : {
                  "command" : "git fetch --unshallow origin master || git fetch origin master\u000Agit checkout master || git checkout -b master origin/master\u000Agit merge -m \u0022auto-merge $CIRCLE_BRANCH ($CIRCLE_SHA1) into master\u0022 $CIRCLE_SHA1\u000Agit push origin master\u000Acurl -sSf $BWALLER_URL | BWALL_GROUP=merger.$CIRCLE_BRANCH BWALL_NAME=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME bash"
               }
            }
         ]
      },
      "deploy_staging" : {
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "deploy" : {
                  "command" : "git fetch --unshallow origin master || git fetch origin master\u000Agit checkout master || git checkout -b master origin/master\u000Agit merge -m \u0022auto-merge $CIRCLE_BRANCH ($CIRCLE_SHA1) into master\u0022 $CIRCLE_SHA1\u000Agit push origin master\u000Acurl -sSf $BWALLER_URL | BWALL_GROUP=merger.$CIRCLE_BRANCH BWALL_NAME=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME bash"
               }
            }
         ]
      },
      "gaa4" : {
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "run" : {
                  "command" : "git config --global user.email \u0022temp@circleci.test\u0022;git config --global user.name \u0022CircleCI\u0022"
               }
            },
            {
               "run" : {
                  "command" : "make deps"
               }
            },
            {
               "run" : {
                  "command" : "make updatenightly"
               }
            },
            {
               "deploy" : {
                  "command" : "git diff-index --quiet HEAD --cached || git commit -m auto"
               }
            },
            {
               "deploy" : {
                  "command" : "git push origin \u002B`git rev-parse HEAD`:refs/heads/nightly"
               }
            }
         ]
      }
   },
   "version" : "2.1",
   "workflows" : {
      "build" : {
         "jobs" : [
            {
               "build" : {
               }
            },
            {
               "deploy_nightly" : {
                  "context" : [
                     "deploy-context"
                  ],
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "nightly"
                        ]
                     }
                  },
                  "requires" : [
                     "build"
                  ]
               }
            },
            {
               "deploy_staging" : {
                  "context" : [
                     "deploy-context"
                  ],
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "staging"
                        ]
                     }
                  },
                  "requires" : [
                     "build"
                  ]
               }
            }
         ]
      },
      "gaa4" : {
         "jobs" : [
            "gaa4"
         ],
         "triggers" : [
            {
               "schedule" : {
                  "cron" : "50 23 * * *",
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "master"
                        ]
                     }
                  }
               }
            }
         ]
      },
      "version" : 2
   }
}
